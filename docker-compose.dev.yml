version: '3.8'

services:
  frontend:
    build: 
      context: .
      dockerfile: frontend.Dockerfile
    container_name: whatsapp-frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:3000
    depends_on:
      - backend

  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: whatsapp-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/whatsapp-transcriber?authSource=admin&directConnection=true
      - REDIS_URL=redis://:redis123@redis:6379
      - CORS_ORIGIN=http://localhost:5173
    ports:
      - "3000:3000"
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
      - ./models:/app/models

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: admin
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    healthcheck:
      test: mongosh --eval 'db.runCommand("ping").ok' --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    command: ["mongod", "--auth"]

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass redis123
    volumes:
      - redis_data:/data

volumes:
  mongodb_data:
  redis_data: