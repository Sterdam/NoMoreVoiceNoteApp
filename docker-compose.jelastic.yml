version: '3.8'
services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=${MONGODB_URI}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - CRYPTO_KEY=${CRYPTO_KEY}
      - SESSION_SECRET=${SESSION_SECRET}
      - WHISPER_MODEL=base
      - MAX_FILE_SIZE=50mb
    volumes:
      - ${DATA_DIR}/data:/app/data
      - ${DATA_DIR}/logs:/app/logs
      - ${DATA_DIR}/models:/app/models
    depends_on:
      - mongodb
      - redis

  mongodb:
    image: mongo:latest
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: mongosh --eval 'db.runCommand("ping").ok' --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:alpine
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    ports:
      - "80:80"
    depends_on:
      - app

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local